0. pom.xml파일에 dependency설정
###############################################
	    <!-- spring datasource -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<!-- apache datasource(dbcp2) -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.1.1</version>
		</dependency>
##################################################



1. jdbc.properties파일  resources폴더에위치[classpath root]
	
	#########################################
	### ConnectionPool Configuration file ###
	#########################################
	jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
	jdbc.url=jdbc:oracle:thin:@182.237.126.19:1521:XE
	jdbc.username=jdeveloper15
	jdbc.password=jdeveloper15

2. application-config.xml에 
			properties file사용설정
          	DataSource 등록

	<!-- properties file사용설정 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- Apache DataSource -->
	<bean id="apacheDataSource" 
	      class="org.apache.commons.dbcp2.BasicDataSource">
	      <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	      <property name="url" value="${jdbc.url}"/>
	      <property name="username" value="${jdbc.username}"/>
	      <property name="password" value="${jdbc.password}"/>
	</bean>
	
2. application-config.xml에 JdbcTemplate 등록
    <!-- JdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>	
	
	